[{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Label":"VBR - Create Protection Group v1.0","Name":"VBR-CreateProtectionGroupv1.0","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The PowerShell endpoint on which the script is to be executed. PowerShell Remoting must be enabled on the endpoint to allow for scripts to be executed remotely.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Dropdown"},"Label":"External Target","Name":"Target","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["Name","TargetType"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/Targets?$filter=(TargetType eq PowerShellEndpoint and Status eq Connected)","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["asset.Target"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Protection Group Name","Name":"protectiongroupname","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Protection Group Description","Name":"protectiongroupdesc","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Agent Targets","Max":999,"Min":1,"Name":"agenttargets","ObjectType":"workflow.ArrayDataType"},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Agent User Name","Name":"agentusername","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Agent Credential Description","Name":"agentcredentialdesc","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":1,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Timeout"},"RollbackTasks":[],"SharedScope":"user","Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"Batch":[{"Body":"#\r\n# Add a new protection group name and description to VBR using pre-existing VBR credentials\r\n# indexed by username and user description for the agent target(s) passed to the script.\r\n#\r\n# Inputs: existing managed credentials for the target computers referenced by \"agentusername\"\r\n# and  \"agentcredentialdesc\", protection group name \"protectiongroupname\", protection group \r\n# description \"protectiongroupdesc\" and host(s) to add to the protection group \"agenttargets\"\r\n#\r\ntry {\r\n    $cred = Get-VBRCredentials | Where-Object {$_.Description -eq \"{{.global.task.input.agentcredentialdesc}}\" -and $_.Name -eq \"{{.global.task.input.agentusername}}\"}\r\n    if ($cred -ne $null) {\r\n        $customCredsArray = @()\r\n        $ICOcollection = \"{{.global.task.input.agenttargets}}\".SubString(1, \"{{.global.task.input.agenttargets}}\".Length-2)\r\n        $hostsArray = $ICOcollection -Split \" \"\r\n\r\n        $computers = $hostsArray | ForEach { New-VBRIndividualComputerCustomCredentials -HostName $_ -Credentials $cred }\r\n\r\n        $protContainer = New-VBRIndividualComputerContainer -CustomCredentials $computers\r\n\r\n        $protGroup = Add-VBRProtectionGroup -Name \"{{.global.task.input.protectiongroupname}}\" -Container $protContainer -Description \"{{.global.task.input.protectiongroupdesc}}\"\r\n\r\n        $deploymentOpt = New-VBRProtectionGroupDeploymentOptions -InstallAgent -UpgradeAutomatically -RebootIfRequired\r\n\r\n        Set-VBRProtectionGroup -ProtectionGroup $protGroup -DeploymentOptions $deploymentOpt\r\n\r\n        Rescan-VBREntity -Entity $protGroup   \r\n    }\r\n    else {\r\n        Write-Error \"Credentials not found!\"\r\n        exit 1\r\n    }\r\n    exit 0\r\n}\r\ncatch {\r\n    Write-Error \"Exception in add protection group\"\r\n    exit 1\r\n}","ContentType":"json","Label":"VBR - Create Protection Group","Name":"InvokePowerShellScript1","ObjectType":"workflow.PowerShellApi","Outcomes":[],"PowerShellResponseSpec":{"Parameters":[]}}],"CancelAction":[],"ClassId":"workflow.PowerShellBatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Name":"VBR - Create Protection Group v1.0","ObjectType":"workflow.PowerShellBatchApiExecutor","Output":{},"SharedScope":"user","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"VBR-CreateProtectionGroupv1.0\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/PowerShellBatchApiExecutors","Verb":"POST"}]